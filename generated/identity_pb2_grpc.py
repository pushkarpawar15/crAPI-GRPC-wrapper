# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import identity_pb2 as identity__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in identity_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class IdentityServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Signup = channel.unary_unary(
                '/identity.IdentityService/Signup',
                request_serializer=identity__pb2.SignupRequest.SerializeToString,
                response_deserializer=identity__pb2.SignupResponse.FromString,
                _registered_method=True)
        self.Login = channel.unary_unary(
                '/identity.IdentityService/Login',
                request_serializer=identity__pb2.LoginRequest.SerializeToString,
                response_deserializer=identity__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.ForgotPassword = channel.unary_unary(
                '/identity.IdentityService/ForgotPassword',
                request_serializer=identity__pb2.ForgotPasswordRequest.SerializeToString,
                response_deserializer=identity__pb2.ForgotPasswordResponse.FromString,
                _registered_method=True)
        self.CheckOTPv3 = channel.unary_unary(
                '/identity.IdentityService/CheckOTPv3',
                request_serializer=identity__pb2.CheckOTPRequest.SerializeToString,
                response_deserializer=identity__pb2.CheckOTPResponse.FromString,
                _registered_method=True)
        self.CheckOTPv2 = channel.unary_unary(
                '/identity.IdentityService/CheckOTPv2',
                request_serializer=identity__pb2.CheckOTPRequest.SerializeToString,
                response_deserializer=identity__pb2.CheckOTPResponse.FromString,
                _registered_method=True)
        self.ChangeEmail = channel.unary_unary(
                '/identity.IdentityService/ChangeEmail',
                request_serializer=identity__pb2.ChangeEmailRequest.SerializeToString,
                response_deserializer=identity__pb2.ChangeEmailResponse.FromString,
                _registered_method=True)
        self.VerifyEmailToken = channel.unary_unary(
                '/identity.IdentityService/VerifyEmailToken',
                request_serializer=identity__pb2.VerifyEmailTokenRequest.SerializeToString,
                response_deserializer=identity__pb2.VerifyEmailTokenResponse.FromString,
                _registered_method=True)
        self.ResetPassword = channel.unary_unary(
                '/identity.IdentityService/ResetPassword',
                request_serializer=identity__pb2.ResetPasswordRequest.SerializeToString,
                response_deserializer=identity__pb2.ResetPasswordResponse.FromString,
                _registered_method=True)
        self.LoginWithTokenv2 = channel.unary_unary(
                '/identity.IdentityService/LoginWithTokenv2',
                request_serializer=identity__pb2.LoginWithTokenRequest.SerializeToString,
                response_deserializer=identity__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.LoginWithTokenv4 = channel.unary_unary(
                '/identity.IdentityService/LoginWithTokenv4',
                request_serializer=identity__pb2.LoginWithTokenRequest.SerializeToString,
                response_deserializer=identity__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.GetDashboard = channel.unary_unary(
                '/identity.IdentityService/GetDashboard',
                request_serializer=identity__pb2.GetDashboardRequest.SerializeToString,
                response_deserializer=identity__pb2.GetDashboardResponse.FromString,
                _registered_method=True)
        self.UpdateProfilePic = channel.unary_unary(
                '/identity.IdentityService/UpdateProfilePic',
                request_serializer=identity__pb2.UpdateProfilePicRequest.SerializeToString,
                response_deserializer=identity__pb2.UpdateProfilePicResponse.FromString,
                _registered_method=True)
        self.UploadProfileVideo = channel.unary_unary(
                '/identity.IdentityService/UploadProfileVideo',
                request_serializer=identity__pb2.UploadProfileVideoRequest.SerializeToString,
                response_deserializer=identity__pb2.ProfileVideo.FromString,
                _registered_method=True)
        self.GetProfileVideo = channel.unary_unary(
                '/identity.IdentityService/GetProfileVideo',
                request_serializer=identity__pb2.GetProfileVideoRequest.SerializeToString,
                response_deserializer=identity__pb2.ProfileVideo.FromString,
                _registered_method=True)
        self.UpdateProfileVideo = channel.unary_unary(
                '/identity.IdentityService/UpdateProfileVideo',
                request_serializer=identity__pb2.UpdateProfileVideoRequest.SerializeToString,
                response_deserializer=identity__pb2.ProfileVideo.FromString,
                _registered_method=True)
        self.DeleteProfileVideo = channel.unary_unary(
                '/identity.IdentityService/DeleteProfileVideo',
                request_serializer=identity__pb2.GetProfileVideoRequest.SerializeToString,
                response_deserializer=identity__pb2.DeleteResponse.FromString,
                _registered_method=True)
        self.ConvertProfileVideo = channel.unary_unary(
                '/identity.IdentityService/ConvertProfileVideo',
                request_serializer=identity__pb2.ConvertProfileVideoRequest.SerializeToString,
                response_deserializer=identity__pb2.ConvertProfileVideoResponse.FromString,
                _registered_method=True)
        self.AdminDeleteProfileVideo = channel.unary_unary(
                '/identity.IdentityService/AdminDeleteProfileVideo',
                request_serializer=identity__pb2.AdminDeleteProfileVideoRequest.SerializeToString,
                response_deserializer=identity__pb2.CRAPIResponse.FromString,
                _registered_method=True)
        self.GetUserVehicles = channel.unary_unary(
                '/identity.IdentityService/GetUserVehicles',
                request_serializer=identity__pb2.GetUserVehiclesRequest.SerializeToString,
                response_deserializer=identity__pb2.GetUserVehiclesResponse.FromString,
                _registered_method=True)
        self.AddVehicle = channel.unary_unary(
                '/identity.IdentityService/AddVehicle',
                request_serializer=identity__pb2.AddVehicleRequest.SerializeToString,
                response_deserializer=identity__pb2.CRAPIResponse.FromString,
                _registered_method=True)
        self.GetVehicleLocation = channel.unary_unary(
                '/identity.IdentityService/GetVehicleLocation',
                request_serializer=identity__pb2.GetVehicleLocationRequest.SerializeToString,
                response_deserializer=identity__pb2.GetVehicleLocationResponse.FromString,
                _registered_method=True)
        self.ResendVehicleDetailsEmail = channel.unary_unary(
                '/identity.IdentityService/ResendVehicleDetailsEmail',
                request_serializer=identity__pb2.ResendVehicleDetailsEmailRequest.SerializeToString,
                response_deserializer=identity__pb2.CRAPIResponse.FromString,
                _registered_method=True)


class IdentityServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Signup(self, request, context):
        """Signup
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Login
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForgotPassword(self, request, context):
        """Forgot Password
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckOTPv3(self, request, context):
        """Check OTP
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckOTPv2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeEmail(self, request, context):
        """Change Email
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyEmailToken(self, request, context):
        """Verify Email Token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginWithTokenv2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginWithTokenv4(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDashboard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfilePic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadProfileVideo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProfileVideo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProfileVideo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProfileVideo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConvertProfileVideo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AdminDeleteProfileVideo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserVehicles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddVehicle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVehicleLocation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResendVehicleDetailsEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IdentityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Signup': grpc.unary_unary_rpc_method_handler(
                    servicer.Signup,
                    request_deserializer=identity__pb2.SignupRequest.FromString,
                    response_serializer=identity__pb2.SignupResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=identity__pb2.LoginRequest.FromString,
                    response_serializer=identity__pb2.LoginResponse.SerializeToString,
            ),
            'ForgotPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ForgotPassword,
                    request_deserializer=identity__pb2.ForgotPasswordRequest.FromString,
                    response_serializer=identity__pb2.ForgotPasswordResponse.SerializeToString,
            ),
            'CheckOTPv3': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckOTPv3,
                    request_deserializer=identity__pb2.CheckOTPRequest.FromString,
                    response_serializer=identity__pb2.CheckOTPResponse.SerializeToString,
            ),
            'CheckOTPv2': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckOTPv2,
                    request_deserializer=identity__pb2.CheckOTPRequest.FromString,
                    response_serializer=identity__pb2.CheckOTPResponse.SerializeToString,
            ),
            'ChangeEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeEmail,
                    request_deserializer=identity__pb2.ChangeEmailRequest.FromString,
                    response_serializer=identity__pb2.ChangeEmailResponse.SerializeToString,
            ),
            'VerifyEmailToken': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyEmailToken,
                    request_deserializer=identity__pb2.VerifyEmailTokenRequest.FromString,
                    response_serializer=identity__pb2.VerifyEmailTokenResponse.SerializeToString,
            ),
            'ResetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetPassword,
                    request_deserializer=identity__pb2.ResetPasswordRequest.FromString,
                    response_serializer=identity__pb2.ResetPasswordResponse.SerializeToString,
            ),
            'LoginWithTokenv2': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginWithTokenv2,
                    request_deserializer=identity__pb2.LoginWithTokenRequest.FromString,
                    response_serializer=identity__pb2.LoginResponse.SerializeToString,
            ),
            'LoginWithTokenv4': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginWithTokenv4,
                    request_deserializer=identity__pb2.LoginWithTokenRequest.FromString,
                    response_serializer=identity__pb2.LoginResponse.SerializeToString,
            ),
            'GetDashboard': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDashboard,
                    request_deserializer=identity__pb2.GetDashboardRequest.FromString,
                    response_serializer=identity__pb2.GetDashboardResponse.SerializeToString,
            ),
            'UpdateProfilePic': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfilePic,
                    request_deserializer=identity__pb2.UpdateProfilePicRequest.FromString,
                    response_serializer=identity__pb2.UpdateProfilePicResponse.SerializeToString,
            ),
            'UploadProfileVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadProfileVideo,
                    request_deserializer=identity__pb2.UploadProfileVideoRequest.FromString,
                    response_serializer=identity__pb2.ProfileVideo.SerializeToString,
            ),
            'GetProfileVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProfileVideo,
                    request_deserializer=identity__pb2.GetProfileVideoRequest.FromString,
                    response_serializer=identity__pb2.ProfileVideo.SerializeToString,
            ),
            'UpdateProfileVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProfileVideo,
                    request_deserializer=identity__pb2.UpdateProfileVideoRequest.FromString,
                    response_serializer=identity__pb2.ProfileVideo.SerializeToString,
            ),
            'DeleteProfileVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProfileVideo,
                    request_deserializer=identity__pb2.GetProfileVideoRequest.FromString,
                    response_serializer=identity__pb2.DeleteResponse.SerializeToString,
            ),
            'ConvertProfileVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.ConvertProfileVideo,
                    request_deserializer=identity__pb2.ConvertProfileVideoRequest.FromString,
                    response_serializer=identity__pb2.ConvertProfileVideoResponse.SerializeToString,
            ),
            'AdminDeleteProfileVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.AdminDeleteProfileVideo,
                    request_deserializer=identity__pb2.AdminDeleteProfileVideoRequest.FromString,
                    response_serializer=identity__pb2.CRAPIResponse.SerializeToString,
            ),
            'GetUserVehicles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserVehicles,
                    request_deserializer=identity__pb2.GetUserVehiclesRequest.FromString,
                    response_serializer=identity__pb2.GetUserVehiclesResponse.SerializeToString,
            ),
            'AddVehicle': grpc.unary_unary_rpc_method_handler(
                    servicer.AddVehicle,
                    request_deserializer=identity__pb2.AddVehicleRequest.FromString,
                    response_serializer=identity__pb2.CRAPIResponse.SerializeToString,
            ),
            'GetVehicleLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVehicleLocation,
                    request_deserializer=identity__pb2.GetVehicleLocationRequest.FromString,
                    response_serializer=identity__pb2.GetVehicleLocationResponse.SerializeToString,
            ),
            'ResendVehicleDetailsEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.ResendVehicleDetailsEmail,
                    request_deserializer=identity__pb2.ResendVehicleDetailsEmailRequest.FromString,
                    response_serializer=identity__pb2.CRAPIResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'identity.IdentityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('identity.IdentityService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class IdentityService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Signup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/Signup',
            identity__pb2.SignupRequest.SerializeToString,
            identity__pb2.SignupResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/Login',
            identity__pb2.LoginRequest.SerializeToString,
            identity__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ForgotPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/ForgotPassword',
            identity__pb2.ForgotPasswordRequest.SerializeToString,
            identity__pb2.ForgotPasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckOTPv3(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/CheckOTPv3',
            identity__pb2.CheckOTPRequest.SerializeToString,
            identity__pb2.CheckOTPResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckOTPv2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/CheckOTPv2',
            identity__pb2.CheckOTPRequest.SerializeToString,
            identity__pb2.CheckOTPResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChangeEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/ChangeEmail',
            identity__pb2.ChangeEmailRequest.SerializeToString,
            identity__pb2.ChangeEmailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyEmailToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/VerifyEmailToken',
            identity__pb2.VerifyEmailTokenRequest.SerializeToString,
            identity__pb2.VerifyEmailTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/ResetPassword',
            identity__pb2.ResetPasswordRequest.SerializeToString,
            identity__pb2.ResetPasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoginWithTokenv2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/LoginWithTokenv2',
            identity__pb2.LoginWithTokenRequest.SerializeToString,
            identity__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoginWithTokenv4(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/LoginWithTokenv4',
            identity__pb2.LoginWithTokenRequest.SerializeToString,
            identity__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDashboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/GetDashboard',
            identity__pb2.GetDashboardRequest.SerializeToString,
            identity__pb2.GetDashboardResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProfilePic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/UpdateProfilePic',
            identity__pb2.UpdateProfilePicRequest.SerializeToString,
            identity__pb2.UpdateProfilePicResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadProfileVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/UploadProfileVideo',
            identity__pb2.UploadProfileVideoRequest.SerializeToString,
            identity__pb2.ProfileVideo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProfileVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/GetProfileVideo',
            identity__pb2.GetProfileVideoRequest.SerializeToString,
            identity__pb2.ProfileVideo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProfileVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/UpdateProfileVideo',
            identity__pb2.UpdateProfileVideoRequest.SerializeToString,
            identity__pb2.ProfileVideo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteProfileVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/DeleteProfileVideo',
            identity__pb2.GetProfileVideoRequest.SerializeToString,
            identity__pb2.DeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConvertProfileVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/ConvertProfileVideo',
            identity__pb2.ConvertProfileVideoRequest.SerializeToString,
            identity__pb2.ConvertProfileVideoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AdminDeleteProfileVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/AdminDeleteProfileVideo',
            identity__pb2.AdminDeleteProfileVideoRequest.SerializeToString,
            identity__pb2.CRAPIResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserVehicles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/GetUserVehicles',
            identity__pb2.GetUserVehiclesRequest.SerializeToString,
            identity__pb2.GetUserVehiclesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddVehicle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/AddVehicle',
            identity__pb2.AddVehicleRequest.SerializeToString,
            identity__pb2.CRAPIResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetVehicleLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/GetVehicleLocation',
            identity__pb2.GetVehicleLocationRequest.SerializeToString,
            identity__pb2.GetVehicleLocationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResendVehicleDetailsEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/identity.IdentityService/ResendVehicleDetailsEmail',
            identity__pb2.ResendVehicleDetailsEmailRequest.SerializeToString,
            identity__pb2.CRAPIResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
