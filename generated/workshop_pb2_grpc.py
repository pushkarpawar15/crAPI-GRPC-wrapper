# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import workshop_pb2 as workshop__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in workshop_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ShopServiceStub(object):
    """Shop service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetProducts = channel.unary_unary(
                '/workshop.ShopService/GetProducts',
                request_serializer=workshop__pb2.Empty.SerializeToString,
                response_deserializer=workshop__pb2.ProductResponse.FromString,
                _registered_method=True)
        self.AddNewProduct = channel.unary_unary(
                '/workshop.ShopService/AddNewProduct',
                request_serializer=workshop__pb2.NewProduct.SerializeToString,
                response_deserializer=workshop__pb2.Product.FromString,
                _registered_method=True)
        self.CreateOrder = channel.unary_unary(
                '/workshop.ShopService/CreateOrder',
                request_serializer=workshop__pb2.ProductQuantity.SerializeToString,
                response_deserializer=workshop__pb2.OrderResponse.FromString,
                _registered_method=True)
        self.UpdateOrder = channel.unary_unary(
                '/workshop.ShopService/UpdateOrder',
                request_serializer=workshop__pb2.OrderUpdateRequest.SerializeToString,
                response_deserializer=workshop__pb2.UpdateOrderResponse.FromString,
                _registered_method=True)
        self.GetOrderByID = channel.unary_unary(
                '/workshop.ShopService/GetOrderByID',
                request_serializer=workshop__pb2.OrderRequest.SerializeToString,
                response_deserializer=workshop__pb2.GetOrderResponse.FromString,
                _registered_method=True)
        self.GetOrders = channel.unary_unary(
                '/workshop.ShopService/GetOrders',
                request_serializer=workshop__pb2.LimitOffset.SerializeToString,
                response_deserializer=workshop__pb2.OrdersResponse.FromString,
                _registered_method=True)
        self.ReturnOrder = channel.unary_unary(
                '/workshop.ShopService/ReturnOrder',
                request_serializer=workshop__pb2.ReturnOrderRequest.SerializeToString,
                response_deserializer=workshop__pb2.ReturnOrderResponse.FromString,
                _registered_method=True)
        self.ApplyCoupon = channel.unary_unary(
                '/workshop.ShopService/ApplyCoupon',
                request_serializer=workshop__pb2.ApplyCouponRequest.SerializeToString,
                response_deserializer=workshop__pb2.ApplyCouponResponse.FromString,
                _registered_method=True)
        self.GetQRCode = channel.unary_unary(
                '/workshop.ShopService/GetQRCode',
                request_serializer=workshop__pb2.Empty.SerializeToString,
                response_deserializer=workshop__pb2.QRCode.FromString,
                _registered_method=True)
        self.GetAllUsers = channel.unary_unary(
                '/workshop.ShopService/GetAllUsers',
                request_serializer=workshop__pb2.Empty.SerializeToString,
                response_deserializer=workshop__pb2.Users.FromString,
                _registered_method=True)
        self.GetAllMechanics = channel.unary_unary(
                '/workshop.ShopService/GetAllMechanics',
                request_serializer=workshop__pb2.Empty.SerializeToString,
                response_deserializer=workshop__pb2.Mechanics.FromString,
                _registered_method=True)
        self.ContactMechanic = channel.unary_unary(
                '/workshop.ShopService/ContactMechanic',
                request_serializer=workshop__pb2.ContactMechanicRequest.SerializeToString,
                response_deserializer=workshop__pb2.ContactMechanicResponse.FromString,
                _registered_method=True)
        self.CreateServiceReport = channel.unary_unary(
                '/workshop.ShopService/CreateServiceReport',
                request_serializer=workshop__pb2.CreateServiceReportRequest.SerializeToString,
                response_deserializer=workshop__pb2.CreateServiceReportResponse.FromString,
                _registered_method=True)
        self.MechanicSignUp = channel.unary_unary(
                '/workshop.ShopService/MechanicSignUp',
                request_serializer=workshop__pb2.MechanicSignUpRequest.SerializeToString,
                response_deserializer=workshop__pb2.Message.FromString,
                _registered_method=True)
        self.ServiceRequests = channel.unary_unary(
                '/workshop.ShopService/ServiceRequests',
                request_serializer=workshop__pb2.LimitOffset.SerializeToString,
                response_deserializer=workshop__pb2.ServiceRequestsResponse.FromString,
                _registered_method=True)
        self.GetMechanicReportById = channel.unary_unary(
                '/workshop.ShopService/GetMechanicReportById',
                request_serializer=workshop__pb2.MechanicReportByIdRequest.SerializeToString,
                response_deserializer=workshop__pb2.MechanicReport.FromString,
                _registered_method=True)


class ShopServiceServicer(object):
    """Shop service
    """

    def GetProducts(self, request, context):
        """Get all products
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddNewProduct(self, request, context):
        """Add a new product
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrder(self, request, context):
        """Create a new order
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrder(self, request, context):
        """Update an order
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrderByID(self, request, context):
        """Get order details by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrders(self, request, context):
        """Get a list of orders
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReturnOrder(self, request, context):
        """Return an order
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyCoupon(self, request, context):
        """Apply coupon to the order
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQRCode(self, request, context):
        """Get QR code for returning an order
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllUsers(self, request, context):
        """Get All users 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllMechanics(self, request, context):
        """Get All Mechanics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ContactMechanic(self, request, context):
        """Contact Mechanic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateServiceReport(self, request, context):
        """Create and assign a Service Report 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MechanicSignUp(self, request, context):
        """SignUp Mechanic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ServiceRequests(self, request, context):
        """Service Requests for Mechanic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMechanicReportById(self, request, context):
        """Get Mechanic Report by id 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ShopServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProducts,
                    request_deserializer=workshop__pb2.Empty.FromString,
                    response_serializer=workshop__pb2.ProductResponse.SerializeToString,
            ),
            'AddNewProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.AddNewProduct,
                    request_deserializer=workshop__pb2.NewProduct.FromString,
                    response_serializer=workshop__pb2.Product.SerializeToString,
            ),
            'CreateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrder,
                    request_deserializer=workshop__pb2.ProductQuantity.FromString,
                    response_serializer=workshop__pb2.OrderResponse.SerializeToString,
            ),
            'UpdateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrder,
                    request_deserializer=workshop__pb2.OrderUpdateRequest.FromString,
                    response_serializer=workshop__pb2.UpdateOrderResponse.SerializeToString,
            ),
            'GetOrderByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrderByID,
                    request_deserializer=workshop__pb2.OrderRequest.FromString,
                    response_serializer=workshop__pb2.GetOrderResponse.SerializeToString,
            ),
            'GetOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrders,
                    request_deserializer=workshop__pb2.LimitOffset.FromString,
                    response_serializer=workshop__pb2.OrdersResponse.SerializeToString,
            ),
            'ReturnOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.ReturnOrder,
                    request_deserializer=workshop__pb2.ReturnOrderRequest.FromString,
                    response_serializer=workshop__pb2.ReturnOrderResponse.SerializeToString,
            ),
            'ApplyCoupon': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyCoupon,
                    request_deserializer=workshop__pb2.ApplyCouponRequest.FromString,
                    response_serializer=workshop__pb2.ApplyCouponResponse.SerializeToString,
            ),
            'GetQRCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQRCode,
                    request_deserializer=workshop__pb2.Empty.FromString,
                    response_serializer=workshop__pb2.QRCode.SerializeToString,
            ),
            'GetAllUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllUsers,
                    request_deserializer=workshop__pb2.Empty.FromString,
                    response_serializer=workshop__pb2.Users.SerializeToString,
            ),
            'GetAllMechanics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllMechanics,
                    request_deserializer=workshop__pb2.Empty.FromString,
                    response_serializer=workshop__pb2.Mechanics.SerializeToString,
            ),
            'ContactMechanic': grpc.unary_unary_rpc_method_handler(
                    servicer.ContactMechanic,
                    request_deserializer=workshop__pb2.ContactMechanicRequest.FromString,
                    response_serializer=workshop__pb2.ContactMechanicResponse.SerializeToString,
            ),
            'CreateServiceReport': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateServiceReport,
                    request_deserializer=workshop__pb2.CreateServiceReportRequest.FromString,
                    response_serializer=workshop__pb2.CreateServiceReportResponse.SerializeToString,
            ),
            'MechanicSignUp': grpc.unary_unary_rpc_method_handler(
                    servicer.MechanicSignUp,
                    request_deserializer=workshop__pb2.MechanicSignUpRequest.FromString,
                    response_serializer=workshop__pb2.Message.SerializeToString,
            ),
            'ServiceRequests': grpc.unary_unary_rpc_method_handler(
                    servicer.ServiceRequests,
                    request_deserializer=workshop__pb2.LimitOffset.FromString,
                    response_serializer=workshop__pb2.ServiceRequestsResponse.SerializeToString,
            ),
            'GetMechanicReportById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMechanicReportById,
                    request_deserializer=workshop__pb2.MechanicReportByIdRequest.FromString,
                    response_serializer=workshop__pb2.MechanicReport.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'workshop.ShopService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('workshop.ShopService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ShopService(object):
    """Shop service
    """

    @staticmethod
    def GetProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/GetProducts',
            workshop__pb2.Empty.SerializeToString,
            workshop__pb2.ProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddNewProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/AddNewProduct',
            workshop__pb2.NewProduct.SerializeToString,
            workshop__pb2.Product.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/CreateOrder',
            workshop__pb2.ProductQuantity.SerializeToString,
            workshop__pb2.OrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/UpdateOrder',
            workshop__pb2.OrderUpdateRequest.SerializeToString,
            workshop__pb2.UpdateOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOrderByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/GetOrderByID',
            workshop__pb2.OrderRequest.SerializeToString,
            workshop__pb2.GetOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/GetOrders',
            workshop__pb2.LimitOffset.SerializeToString,
            workshop__pb2.OrdersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReturnOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/ReturnOrder',
            workshop__pb2.ReturnOrderRequest.SerializeToString,
            workshop__pb2.ReturnOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ApplyCoupon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/ApplyCoupon',
            workshop__pb2.ApplyCouponRequest.SerializeToString,
            workshop__pb2.ApplyCouponResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetQRCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/GetQRCode',
            workshop__pb2.Empty.SerializeToString,
            workshop__pb2.QRCode.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/GetAllUsers',
            workshop__pb2.Empty.SerializeToString,
            workshop__pb2.Users.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllMechanics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/GetAllMechanics',
            workshop__pb2.Empty.SerializeToString,
            workshop__pb2.Mechanics.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ContactMechanic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/ContactMechanic',
            workshop__pb2.ContactMechanicRequest.SerializeToString,
            workshop__pb2.ContactMechanicResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateServiceReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/CreateServiceReport',
            workshop__pb2.CreateServiceReportRequest.SerializeToString,
            workshop__pb2.CreateServiceReportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MechanicSignUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/MechanicSignUp',
            workshop__pb2.MechanicSignUpRequest.SerializeToString,
            workshop__pb2.Message.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ServiceRequests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/ServiceRequests',
            workshop__pb2.LimitOffset.SerializeToString,
            workshop__pb2.ServiceRequestsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMechanicReportById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workshop.ShopService/GetMechanicReportById',
            workshop__pb2.MechanicReportByIdRequest.SerializeToString,
            workshop__pb2.MechanicReport.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
